<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="dev-master@41ca7f7f7a0b3ce589fa969a57f25fa13f5d6b96">
  <file src="../src/DelegatingEngine.php">
    <ImplicitToStringCast occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </ImplicitToStringCast>
  </file>
  <file src="../src/Escaper.php">
    <MissingThrowsDocblock occurrences="1">
      <code>Psl\invariant_violation('No escaper is configured for the "%s" context.', $context)</code>
    </MissingThrowsDocblock>
  </file>
  <file src="../src/Escaper/JavaScriptEscaper.php">
    <MissingThrowsDocblock occurrences="1">
      <code>Regex\replace_with($content, '#[^\p{L}\p{N} ]#u', $callback)</code>
    </MissingThrowsDocblock>
    <MixedArgument occurrences="2">
      <code>$char</code>
      <code>$char</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$char</code>
    </MixedAssignment>
  </file>
  <file src="../src/Helper/SlotsHelper.php">
    <ForbiddenEcho occurrences="1">
      <code>echo $default;</code>
    </ForbiddenEcho>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;slots[$name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="1">
      <code>$name</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>?string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;slots[$name] ?? $default</code>
    </MixedReturnStatement>
    <PossiblyFalseArgument occurrences="1">
      <code>PHP_VERSION_ID &gt;= 80000 ? false : 0</code>
    </PossiblyFalseArgument>
  </file>
  <file src="../src/Internal/PHPEngineRenderingContext.php">
    <InvalidDocblockParamName occurrences="1">
      <code>$parametersa</code>
    </InvalidDocblockParamName>
    <MissingThrowsDocblock occurrences="4">
      <code>Psl\invariant(!Iter\contains_key($this-&gt;parameters, 'this'), 'Invalid parameter (this).')</code>
      <code>Psl\invariant(!Iter\contains_key($this-&gt;parameters, 'view'), 'Invalid parameter (view).')</code>
      <code>render</code>
      <code>throw new RuntimeException(sprintf('The template "%s" cannot be rendered.', $__template_storage__-&gt;__toString()));</code>
    </MissingThrowsDocblock>
    <MixedOperand occurrences="1">
      <code>$__template_storage__</code>
    </MixedOperand>
    <UnresolvableInclude occurrences="1">
      <code>require $__template_storage__</code>
    </UnresolvableInclude>
    <UnusedVariable occurrences="1">
      <code>$view</code>
    </UnusedVariable>
  </file>
  <file src="../src/Loader/CacheLoader.php">
    <MissingThrowsDocblock occurrences="1">
      <code>throw new RuntimeException(sprintf('Cache Loader was not able to create directory "%s".', $dir));</code>
    </MissingThrowsDocblock>
  </file>
  <file src="../src/Loader/ChainLoader.php">
    <MixedAssignment occurrences="3">
      <code>$loader</code>
      <code>$loader</code>
      <code>$storage</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>?Storage</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>isFresh</code>
      <code>load</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$loader-&gt;isFresh($template, $time)</code>
      <code>$storage</code>
    </MixedReturnStatement>
  </file>
  <file src="../src/Loader/FilesystemLoader.php">
    <TypeDoesNotContainType occurrences="1">
      <code>false === $storage = $this-&gt;load($template)</code>
    </TypeDoesNotContainType>
  </file>
  <file src="../src/PHPEngine.php">
    <MixedArgument occurrences="3">
      <code>$stack</code>
      <code>$stack</code>
      <code>array_pop($stack) ?: ''</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$helpers</code>
    </MixedArgumentTypeCoercion>
    <NullPropertyFetch occurrences="1">
      <code>$context-&gt;stack</code>
    </NullPropertyFetch>
    <PossiblyInvalidArgument occurrences="2">
      <code>$name</code>
      <code>$stack</code>
    </PossiblyInvalidArgument>
    <PossiblyNullPropertyFetch occurrences="1">
      <code>$context-&gt;stack</code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference occurrences="2">
      <code>get</code>
      <code>set</code>
    </PossiblyNullReference>
  </file>
</files>
